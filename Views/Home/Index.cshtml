@model List<tblElasticData>
@{
    ViewData["Title"] = "Elastic Data";
}
<input type="hidden" id="exportData" />
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css" />
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/buttons/1.7.1/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/buttons/1.7.1/js/buttons.html5.min.js"></script>

<h2>@ViewData["Title"]</h2>
<input type="hidden" id="exportData" />
<div class="container">
    <form method="get">
        <div class="input-group mb-3">
            <input type="text" class="form-control" name="searchSubject" placeholder="Search by Subject">
            <div class="input-group-append">
                <button class="btn btn-primary" type="submit">Search</button>
            </div>
        </div>
    </form>

    @if (Model != null && Model.Any())
    {
            <div class="form-group">
        <label for="pageSizeDropdown">Rows Per Page:</label>
        <select id="pageSizeDropdown" class="form-control">
            <option value="10" selected="@(ViewBag.PageSize == 10)">10</option>
            <option value="20" selected="@(ViewBag.PageSize == 20)">20</option>
            <option value="50" selected="@(ViewBag.PageSize == 50)">50</option>
        </select>
    </div>
        <h3>Search Results:</h3>
        <div class="table-responsive">
            <table id="dataTable" class="table table-striped table-responsive">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>To</th>
                        <th>From</th>
                        <th>Event Type</th>
                        <th>Event Date</th>
                        <th>Channel</th>
                        <th>Message Cat.</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.To</td>
                            <td>@item.From</td>
                            <td>@item.EventType</td>
                            <td>@item.EventDate</td>
                            <td>@item.Channel</td>
                            <td>@item.MessageCategory</td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="d-flex justify-content-center align-items-center flex-wrap">
                <nav aria-label="Page navigation">
                    <ul class="pagination">

                        @if (ViewBag.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { searchSubject = ViewBag.SearchSubject, page = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize })">Previous</a>
                            </li>
                        }

                        @if (ViewBag.CurrentPage > 3)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { searchSubject = ViewBag.SearchSubject, page = 1, pageSize = ViewBag.PageSize })">1</a>
                            </li>
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        }

                        @for (var pge = Math.Max(1, ViewBag.CurrentPage - 2); pge <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); pge++)
                        {
                            <li class="page-item @(pge == ViewBag.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { searchSubject = ViewBag.SearchSubject, page = pge, pageSize = ViewBag.PageSize })">@pge</a>
                            </li>
                        }

                        @if (ViewBag.CurrentPage < ViewBag.TotalPages - 2)
                        {
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { searchSubject = ViewBag.SearchSubject, page = ViewBag.TotalPages, pageSize = ViewBag.PageSize })">@ViewBag.TotalPages</a>
                            </li>
                        }

                        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { searchSubject = ViewBag.SearchSubject, page = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize })">Next</a>
                            </li>
                        }

                    </ul>
                </nav>
            </div>
            <div class="d-flex justify-content-between align-items-center flex-wrap">
                <!-- Download Excel button -->
                <button class="btn btn-success" id="excelButton">Export Current Page</button>

                <!-- Export All as Excel button -->
                <button class="btn btn-success" id="exportAllButton">Export All Data</button>
            </div>
        </div>
    }
</div>



<script>
    $(document).ready(function () {
        // Download Excel button
        $('#excelButton').on('click', function () {
            exportExcel($('#dataTable tbody tr'));
        });

        // Export All as Excel button
        $('#exportAllButton').on('click', function () {
            $.ajax({
                url: "@Url.Action("ExportAll", "Home")",
                data: { searchSubject: "@ViewBag.SearchSubject" },
                success: function (response) {
                    var blob = new Blob([response], { type: 'application/vnd.ms-excel' });
                    var a = document.createElement('a');
                    a.href = window.URL.createObjectURL(blob);
                    a.download = 'exported_data_all.xls';
                    a.click();
                }
            });
        });

        function exportExcel(rows) {
            var tableData = [];

            rows.each(function () {
                var row = [];
                $(this).find('td').each(function () {
                    row.push($(this).text());
                });
                tableData.push(row.join('\t'));
            });

            $('#exportData').val(tableData.join('\n'));

            var blob = new Blob([$('#exportData').val()], { type: 'application/vnd.ms-excel' });
            var a = document.createElement('a');
            a.href = window.URL.createObjectURL(blob);
            a.download = 'exported_data.xls';
            a.click();
        }
    });
</script>